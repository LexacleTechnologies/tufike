"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DropboxResponse = undefined;
exports.parseResponse = parseResponse;
exports.parseDownloadResponse = parseDownloadResponse;

var _utils = require("./utils");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DropboxResponse = exports.DropboxResponse = function DropboxResponse(status, headers, result) {
  _classCallCheck(this, DropboxResponse);

  this.status = status;
  this.headers = headers;
  this.result = result;
};

function parseResponse(res) {
  var clone = res.clone();
  return res.json()["catch"](function () {
    clone.text();
  }).then(function (data) {
    return new DropboxResponse(res.status, res.headers, data);
  });
}

function parseDownloadResponse(res) {
  return new Promise(function (resolve) {
    if (!res.ok) {
      res.text().then(function (data) {
        return resolve(data);
      });
    } else if ((0, _utils.isWindowOrWorker)()) {
      res.blob().then(function (data) {
        return resolve(data);
      });
    } else {
      res.buffer().then(function (data) {
        return resolve(data);
      });
    }
  }).then(function (data) {
    var result;

    if (!res.ok) {
      result = data;
    } else {
      result = JSON.parse(res.headers.get('dropbox-api-result'));

      if ((0, _utils.isWindowOrWorker)()) {
        result.fileBlob = data;
      } else {
        result.fileBinary = data;
      }
    }

    return new DropboxResponse(res.status, res.headers, result);
  });
}